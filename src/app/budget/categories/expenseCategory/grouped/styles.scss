@use './mixins' as mxn;

.grouped-categories-grid {
  display: grid;
  grid-template-columns: repeat(11, 1fr) var(--category-context-width);
  grid-auto-rows: min-content;

  flex: 3 1;

  .header-row {
    @include mxn.styled-grid-header($display: grid);
    grid-template-columns: subgrid;
    grid-column: 1 / -1;
    background-color: var(--background-light);
    position: sticky;
    top: var(--nav-height);

    transition: opacity .5s, visibility .5s;

    &.hidden {
      visibility: hidden;
      opacity: 0;
    }
  }
  
  .header {
    text-align: center;
    background-color: var(--background-light);

    &.group-header {
      grid-column: 1 / 3;
      visibility: none;
    }

    &.category {
      grid-column: 3 / 5;
    }
  }

  * {
    align-self: center;
  }

  .group {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: 1 / 14;

    border-top: 1px solid var(--outline);
    
    margin: 1rem 0;
    min-height: 2rem;

    .name {
      grid-column: 1/3;
      align-self: start;
      justify-self: center;

      top: var(--nav-height);

      max-width: 90%;
      
      text-align: center;
      text-overflow: ellipsis;
      overflow: hidden;
      
      @include mxn.border-label($margin: -1rem, $font-size: 1.2rem, $padding: 0 8px, $position: sticky);
    }

    .group-categories {
      display: grid;
      grid-template-columns: subgrid;
      grid-column: 3 / -1;
      align-self: start;
      // The gap-plus-background-color combo creates the illusion of borders in the grid
      // gap: 1px;
      // background-color: var(--outline;
      border-left: 2px solid var(--outline);

      .group-category {
        // TODO: If there is only one child, this fix (for ensuring borders aren't snipped off
        // at the corners) only works for the bottom corner. Need to come up with a better strategy.
        &:first-child {
          border-radius: 0 var(--border-radius) 0 0;
        }
        
        &:last-child {
          border-radius: 0 0 var(--border-radius) 0;
        }

        display: grid;
        grid-template-columns: subgrid;
        grid-column: 1 / -1;
        background-color: var(--background-light);

        .grid-cell {
          padding-left: 8px;
        }

        &.highlight {
          background-color: var(--secondary-light);
        }

        .category-name {
          grid-column: 1 / 3;
        }

        .category-edit-button {
          grid-column: -1;
          
          padding-top: 0;
          padding-bottom: 0;
        }
      }
    }
  }
}